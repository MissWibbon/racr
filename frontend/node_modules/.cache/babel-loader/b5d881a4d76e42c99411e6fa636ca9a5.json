{"ast":null,"code":"import _slicedToArray from \"/Users/jimmybreseman/Desktop/racr/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jimmybreseman/Desktop/racr/frontend/src/components/appstate.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport API from '../utils/API';\nexport const RaceContext = React.createContext();\nexport const Provider = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        users = _useState2[0],\n        setusers = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isLoading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const _useState5 = useState(undefined),\n        _useState6 = _slicedToArray(_useState5, 2),\n        localUser = _useState6[0],\n        setLocalUser = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isAuth = _useState8[0],\n        setisAuth = _useState8[1];\n\n  const fetchUsers = () => {\n    API.getUsers().then(res => {\n      console.log(res.data);\n      setusers(res.data);\n      setLoading(true);\n    });\n  };\n\n  const fetchOneUser = id => {\n    API.getOneUser(id);\n  };\n\n  const getToken = () => {\n    const jwt = window.localStorage.getItem('token');\n\n    if (jwt) {\n      setLocalUser(JSON.parse(jwt));\n      setisAuth(true);\n    }\n  };\n\n  useEffect(() => {\n    fetchUsers();\n    getToken();\n  }, []);\n  return React.createElement(RaceContext.Provider, {\n    value: {\n      users,\n      isAuth,\n      isLoading,\n      fetchUsers,\n      localUser,\n      fetchOneUser,\n      getToken\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/jimmybreseman/Desktop/racr/frontend/src/components/appstate.js"],"names":["React","useState","useContext","useEffect","API","RaceContext","createContext","Provider","props","users","setusers","isLoading","setLoading","undefined","localUser","setLocalUser","isAuth","setisAuth","fetchUsers","getUsers","then","res","console","log","data","fetchOneUser","id","getOneUser","getToken","jwt","window","localStorage","getItem","JSON","parse","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,UAA3B,EAAuCC,SAAvC,QAAuD,OAAvD;AACA,OAAOC,GAAP,MAAgB,cAAhB;AAEA,OAAO,MAAMC,WAAW,GAAGL,KAAK,CAACM,aAAN,EAApB;AAEP,OAAO,MAAMC,QAAQ,GAAIC,KAAK,IAAG;AAAA,oBACHP,QAAQ,CAAC,EAAD,CADL;AAAA;AAAA,QACtBQ,KADsB;AAAA,QACfC,QADe;;AAAA,qBAEGT,QAAQ,CAAC,KAAD,CAFX;AAAA;AAAA,QAEtBU,SAFsB;AAAA,QAEXC,UAFW;;AAAA,qBAGKX,QAAQ,CAACY,SAAD,CAHb;AAAA;AAAA,QAGtBC,SAHsB;AAAA,QAGXC,YAHW;;AAAA,qBAIDd,QAAQ,CAAC,KAAD,CAJP;AAAA;AAAA,QAItBe,MAJsB;AAAA,QAIdC,SAJc;;AAK7B,QAAMC,UAAU,GAAG,MAAK;AACpBd,IAAAA,GAAG,CAACe,QAAJ,GACCC,IADD,CACMC,GAAG,IAAG;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAd,MAAAA,QAAQ,CAACW,GAAG,CAACG,IAAL,CAAR;AACAZ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KALD;AAOH,GARD;;AAUA,QAAMa,YAAY,GAAIC,EAAD,IAAO;AACxBtB,IAAAA,GAAG,CAACuB,UAAJ,CAAeD,EAAf;AAEH,GAHD;;AAKA,QAAME,QAAQ,GAAG,MAAM;AACpB,UAAMC,GAAG,GAAEC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAX;;AACC,QAAGH,GAAH,EAAO;AACHd,MAAAA,YAAY,CAACkB,IAAI,CAACC,KAAL,CAAWL,GAAX,CAAD,CAAZ;AACAZ,MAAAA,SAAS,CAAC,IAAD,CAAT;AAGH;AACJ,GARD;;AAWAd,EAAAA,SAAS,CAAC,MAAI;AACVe,IAAAA,UAAU;AACVU,IAAAA,QAAQ;AACX,GAHQ,EAGP,EAHO,CAAT;AAIA,SACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAI;AAC3BnB,MAAAA,KAD2B;AAE3BO,MAAAA,MAF2B;AAG3BL,MAAAA,SAH2B;AAI3BO,MAAAA,UAJ2B;AAK3BJ,MAAAA,SAL2B;AAM3BW,MAAAA,YAN2B;AAO3BG,MAAAA;AAP2B,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASKpB,KAAK,CAAC2B,QATX,CADJ;AAaH,CAhDM","sourcesContent":["import React , {useState , useContext, useEffect} from 'react'\nimport API from '../utils/API'\n\nexport const RaceContext = React.createContext();\n\nexport const Provider  = props =>{\n    const [users, setusers] = useState('');\n    const [isLoading, setLoading] = useState(false);\n    const [localUser, setLocalUser] = useState(undefined)\n    const [isAuth, setisAuth] = useState(false)\n    const fetchUsers = () =>{\n        API.getUsers()\n        .then(res =>{\n            console.log(res.data)\n            setusers(res.data)\n            setLoading(true)\n        } )\n\n    }\n\n    const fetchOneUser = (id) =>{\n        API.getOneUser(id)\n\n    }\n\n    const getToken = () => {\n       const jwt= window.localStorage.getItem('token');\n        if(jwt){\n            setLocalUser(JSON.parse(jwt))\n            setisAuth(true)\n        \n\n        }\n    }\n\n\n    useEffect(()=>{\n        fetchUsers()\n        getToken()\n    },[])\n    return(\n        <RaceContext.Provider value = {{\n            users,\n            isAuth,\n            isLoading,\n            fetchUsers,\n            localUser,\n            fetchOneUser,\n            getToken\n            }}>\n            {props.children}\n        </RaceContext.Provider>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}