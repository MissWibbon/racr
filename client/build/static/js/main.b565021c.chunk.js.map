{"version":3,"sources":["../node_modules/filestack-js/build/module/lib/utils sync","utils/API.js","components/appstate.js","components/landing.js","components/user.js","components/home.js","components/Navbar.js","components/profile.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","getUsers","axios","get","getOneUser","deleteUser","delete","saveUser","userData","post","getRaces","getOneRace","raceData","loginData","RaceContext","React","createContext","useInput","initialvalue","useState","inputs","setInputs","value","onChange","target","console","log","Landing","context","useContext","email","password","className","type","name","onClick","body","preventDefault","API","login","then","res","window","localStorage","setItem","JSON","stringify","data","getToken","isAuth","class","to","useSearchValue","initialValue","userState","setUserState","User","users","localUser","isLoading","searchbar","placeHolder","src","image","city","state","country","userName","firstName","lastName","Home","Navbar","exact","client","filestack","SignUp","props","age","event","file","files","item","upload","url","catch","err","history","push","App","path","component","render","Boolean","location","hostname","match","ReactDOM","setusers","setLoading","undefined","setLocalUser","setisAuth","fetchUsers","jwt","getItem","parse","useEffect","Provider","children","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b565021c.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 108;","import axios from 'axios';\n\nexport default {\n    \n    // User APIs\n    // Gets users\n    getUsers: function() {\n        return axios.get(`/api/users/`);\n        \n    },\n\n    // Gets individual user\n    getOneUser: function(id) {\n        return axios.get(`/api/users/${id}`);\n    },\n\n    // Deletes user with given id\n    deleteUser: function(id) {\n        return axios.delete(`/api/users/${id}`);\n    },\n\n    // Saves a user to the database\n    saveUser: function(userData) {\n        return axios.post(`/api/users`, userData);\n    },\n\n    // Race APIs\n    // Gets races\n    getRaces: function() {\n        return axios.get(`/api/races/`);\n    },\n\n    // Gets individual race\n    getOneRace: function(id) {\n        return axios.get(`/api/races/${id}`);\n    },\n\n    // Deletes race with given id\n    deleteUser: function(id) {\n        return axios.delete(`/api/races/${id}`);\n    },\n\n    // Saves a race to the database\n    saveRace: function(raceData) {\n        return axios.post(`/api/races`, raceData);\n    },\n    login: function(loginData){\n        return axios.post('/api/users/login', loginData)\n    } \n}","import React , {useState , useContext, useEffect} from 'react'\nimport API from '../utils/API'\n\nexport const RaceContext = React.createContext();\n\nexport const Provider  = props =>{\n    const [users, setusers] = useState('');\n    const [isLoading, setLoading] = useState(false);\n    const [localUser, setLocalUser] = useState(undefined)\n    const [isAuth, setisAuth] = useState(false)\n    const fetchUsers = () =>{\n        API.getUsers()\n        .then(res =>{\n            console.log(res.data)\n            setusers(res.data)\n            setLoading(true)\n        } )\n\n    }\n\n    const getToken = () => {\n       const jwt= window.localStorage.getItem('token');\n        if(jwt){\n            setLocalUser(JSON.parse(jwt))\n            setisAuth(true)\n        \n\n        }\n    }\n\n\n    useEffect(()=>{\n        fetchUsers()\n        getToken()\n    },[])\n    return(\n        <RaceContext.Provider value = {{\n            users,\n            isAuth,\n            isLoading,\n            fetchUsers,\n            localUser,\n            getToken\n            }}>\n            {props.children}\n        </RaceContext.Provider>\n    )\n}\n\n","import React, {useState, useContext}  from 'react'\nimport {Link} from 'react-router-dom'\nimport API from '../utils/API'\nimport {RaceContext} from './appstate'\nconst Landing =() =>{\n    const context = useContext(RaceContext)\n    const email = useInput('');\n    const password = useInput('');\n    const handleSubmit = (e) =>{\n        const body = {\n            email: email.value,\n            password: password.value\n        }\n        e.preventDefault();\n        API.login(body)\n            .then(res => {\n                window.localStorage.setItem('token', JSON.stringify(res.data))\n                context.getToken()\n                if (context.isAuth){\n                    console.log('auth')\n                }else{\n                    console.log('not auth')\n                }\n            })\n        console.log('this is where i send shit');\n        \n    }\n    return(\n        <div className=\"loginWrap\">\n            <form id=\"login\">\n                <label id=\"email\">Email:</label>\n                <input {...email}type ='text' name = 'name'></input>\n                <label id=\"password\">Password:</label>\n                <input {...password}type ='password' name = 'name'></input>\n                <div><button id=\"submitButton\" onClick ={handleSubmit} type ='submit'>Submit</button></div>\n                <div class=\"registerLink\"><Link to=\"/signup\">Register</Link></div>\n            </form>\n        </div>\n    )\n}\n\nconst useInput = (initialvalue) => {\n    const [inputs, setInputs] = useState(initialvalue);\n    const handlevaluechange =(e) =>{\n        setInputs(e.target.value)\n        console.log(e.target.value)\n\n    }\n    return {\n        value:inputs,\n        onChange: handlevaluechange\n    }\n\n  }\nexport default Landing","import React, {useContext, useEffect, useState}from 'react'\nimport {RaceContext} from './appstate'\nconst User = () =>{\n    const context = useContext(RaceContext)\n    const {localUser} = context\n    const {users, isLoading} = context\n    const searchbar = useSearchValue('')\n    return(\n        \n        <div id=\"profilePage\">\n        <input type= 'text'\n        {...searchbar}\n        data= {users} \n        placeHolder ='Enter Username Here'\n        ></input>\n        {isLoading\n        ?(\n            <div>\n                <div className=\"profileImage\">\n                    <img className=\"imgSrc\" src={`${users[0].image}`}/>\n                <div className=\"locationWrap\">\n                    <div className=\"profileLocation\">{`${users[0].city}, ${users[0].state} ${users[0].country}` }</div>\n                </div>\n                </div>\n                <div class=\"profileInfo\">\n                    <div className=\"profileUserName\">{`@${users[0].userName}` }</div>\n                    <div className=\"profileName\">{`${users[0].firstName} ${users[0].lastName}` }</div>\n                    {/* <div className=\"profileRunType\">{`${users[3].raceType.charAt(0).toUpperCase()}` + `${users[3].raceType.slice(1)}`} Runner</div> */}\n                </div>\n            </div>\n        ):\n        <h2>Loading...</h2>\n        }\n        </div>\n    )\n}\nconst useSearchValue = (initialValue) =>{\n    const [userState, setUserState] = useState(initialValue);\n    const handlevaluechange =(e) =>{\n        setUserState(e.target.value);\n        console.log(e.target.value)\n    }\n    return {\n        value: userState,\n        onChange: handlevaluechange,\n       \n    }\n}\nexport default User","import React from 'react'\nimport User from './user'\nconst Home =() =>{\n    return(\n        <User></User>\n    )\n}\nexport default Home","import React from 'react'\n\nimport {NavLink} from 'react-router-dom'\n\nconst Navbar = () =>{\n\n    return(\n        <div className=\"navWrapper\">\n            <NavLink className=\"navLink\" exact to = '/home'><i class=\"fas fa-user\"></i></NavLink>\n            <NavLink className=\"navLink\" exact to = '/notifications'><i class=\"fas fa-bell\"></i></NavLink>\n            <NavLink className=\"navLink\" exact to = '/race'><i class=\"fas fa-running\"></i></NavLink>\n            <NavLink className=\"navLink\" exact to = '/users'><i class=\"fas fa-search\"></i></NavLink>\n            <NavLink className=\"navLink\" exact to = '/login'><i class=\"fas fa-sign-out-alt\"></i></NavLink>\n        </div>\n    )\n}\n\nexport default Navbar","import React, {useState, useContext} from 'react'\nimport * as filestack from 'filestack-js';\nimport {Link} from 'react-router-dom'\nimport API from '../utils/API'\nimport {RaceContext} from './appstate'\n\n\nconst client = filestack.init('AFeiQyudCRNK8T2g46sKFz');\n\nconst SignUp = (props) =>{\n    const context = useContext(RaceContext); \n    const email = useInput('');\n    const password = useInput('');\n    const firstName = useInput('');\n    const lastName = useInput('');\n    const userName = useInput('');\n    const city = useInput('');\n    const state = useInput('');\n    const country = useInput('');\n    const age = useInput('');\n    let image ='';\n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n        const body ={\n            email: email.value,\n            password: password.value,\n            firstName: firstName.value,\n        lastName: lastName.value,\n        userName: userName.value,\n    city: city.value,\n    state: state.value,\n    country: country.value,\n    age: age.value,\n    image\n    }\n        console.log(body)\n        API.saveUser(body)\n            .then(res => {\n                props.history.push('/login')\n\n            })\n\n\n        console.log('this is where i send shit');\n        \n    }\n    \n    const fileChange = (event) =>{\n        const files = event.target.files;\n        const file = files.item(0);\n      \n        client.upload(file)\n          .then(res => {\n            console.log('success: ', res)\n            image = res.url\n          })\n          .catch(err => {\n            console.log(err)\n          });\n          return image\n    }\n    return(\n        <div className=\"registerWrap\">\n            <form id=\"register\">\n                <div className=\"inputWrap\">\n                    <label id=\"email\">Email:</label>\n                    <input {...email} type ='text' name = 'name'></input>\n                </div>\n                <div className=\"inputWrap\">\n                    <label id=\"userName\">User Name:</label>\n                    <input {...userName} type ='text' name = 'name'></input>\n                </div>\n                <div className=\"inputWrap\">\n                    <label id=\"password\">Password:</label>\n                    <input {...password} type ='password' name = 'name'></input>\n                </div>\n                <div className=\"inputWrap\">\n                    <label id=\"age\">Age:</label>\n                    <input {...age} type ='text' name = 'name'></input>\n                </div>\n                <div className=\"inputWrap\">\n                    <label id=\"firstName\">First Name:</label>\n                    <input id=\"firstNameInput\" {...firstName} type ='text' name = 'name'></input>\n                </div>\n                <div className=\"inputWrap\">\n                    <label id=\"lastName\">Last Name:</label>\n                    <input id=\"lastNameInput\" {...lastName} type ='text' name = 'name'></input>\n                </div>\n                <div className=\"inputWrap\">\n                    <label id=\"city\">City:</label>\n                    <input {...city} type ='text' name = 'name'></input>\n                </div>\n                <div className=\"inputWrap\">\n                    <label id=\"state\">State:</label>\n                    <input {...state} type ='text' name = 'name'></input>\n                </div>\n                <div className=\"inputWrap\">\n                    <label id=\"country\">Country:</label>\n                    <input {...country} type ='text' name = 'name'></input>\n                </div>\n                <div className=\"inputWrap\">\n                    <label id=\"profileImage\">Image:</label>\n                    <input id=\"imageUpload\" type = \"file\" onChange = {fileChange}name = 'name'></input>\n                </div>\n                <button id=\"submitButton\" onClick ={handleSubmit} type ='submit'>Submit</button>\n                <div class=\"signinLink\"><Link to=\"/\">Sign In</Link></div>\n            </form>\n\n        </div>\n    )\n}\n\nconst useInput = (initialvalue) => {\n    const [inputs, setInputs] = useState(initialvalue);\n    const handlevaluechange =(e) =>{\n        setInputs(e.target.value)\n        console.log(e.target.value)\n\n    }\n    return {\n        value:inputs,\n        onChange: handlevaluechange\n    }\n\n  }\n\nexport default SignUp","import React from 'react';\nimport {BrowserRouter, Route, NavLink, Redirect, Switch} from 'react-router-dom'\nimport Landing from './components/landing'\nimport Home from './components/home'\nimport Navbar from './components/Navbar'\nimport SignUp from './components/profile'\nimport './styles/main.scss';\nfunction App() {\n  return (\n    <BrowserRouter>\n    <Navbar></Navbar>\n      <Switch>\n        <Route to path = '/login' component ={Landing}/>\n        <Route to path = '/home' component ={Home}/>\n        <Route to path = '/signup' component={SignUp}/>\n        <Route to exact path = '/' render= {()=><Redirect to ='/login'/>}/>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Provider} from './components/appstate'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<Provider>\n<App />\n</Provider>\n\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}